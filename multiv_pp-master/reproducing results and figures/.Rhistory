p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
rm(list=ls())
library(ggplot2)
library(gridExtra)
setwd("C:/Users/20192042/OneDrive - TU Eindhoven/Courses/BEP - BAM/Code/multiv_pp-master/reproducing results and figures")
load("../Data/TestStatistic/testStatistic_Archimedean_1.Rdata")
df <- dfmc; rm(dfmc)
df1 <- subset(df)
input_theta0 <- c(5, 10)
input_theta <- c(5, 10)
input_copula <- c("Frank","Gumbel", "Clayton")
input_d <- 3
# # Put the parameters in a grid
# input_par <- expand.grid(input_theta0, input_theta, input_copula, input_d)
# names(input_par) <- c("theta0", "theta", "copula",  "d")
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- "../Data/Plots/"
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q
df2 <- subset(df1, model != "emos.q")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("decc.q" = mypal[1],
"ecc.q" = mypal[2],
"ecc.s" = mypal[3],
"gca" = mypal[4],
"ssh" = mypal[5],
"Clayton" = mypal[6],
"Frank" = mypal[7],
"Gumbel" = mypal[8])
df2$model <- factor(df2$model, levels = c("decc.q", "ecc.q", "ecc.s", "gca", "ssh", "clayton", "frank", "gumbel"))
model_vec <- c("dECC", "ECC-Q", "ECC-S", "GCA", "SSh", "Clayton", "Frank", "Gumbel")
# Plot the scores for copula
plotScores <- function(dfplot, cop, this_score){
dfplotCop <- subset(dfplot, copula == cop)
ylimits <- unname(quantile(dfplot$value, c(0.1, 0.9)))
p1 <- ggplot(dfplotCop, aes(model, value, colour = model)) +
geom_rect(data = subset(dfplotCop, equalThetas == 1), color = "black", size = 2, fill = NA, xmin = -Inf,xmax = Inf, ymin = -10,ymax = 10)
p1 <- p1 + ylim(ylimits[1], ylimits[2])
p1 <- p1 + geom_rect(mapping=aes(xmin=-Inf, xmax=Inf, ymin=qnorm(0.025), ymax=qnorm(0.975)), fill = "gray75", color="gray75", alpha=0.25)
p1 <- p1 + geom_boxplot(outlier.shape = NA) + geom_hline(yintercept = 0, linetype = "dashed", color = "gray25")
p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
qnorm(0.025)
qnorm(0.975)
rm(list=ls())
library(ggplot2)
library(gridExtra)
setwd("C:/Users/20192042/OneDrive - TU Eindhoven/Courses/BEP - BAM/Code/multiv_pp-master/reproducing results and figures")
load("../Data/TestStatistic/testStatistic_Archimedean_1.Rdata")
df <- dfmc; rm(dfmc)
df1 <- subset(df)
input_theta0 <- c(5, 10)
input_theta <- c(5, 10)
input_copula <- c("Frank","Gumbel", "Clayton")
input_d <- 3
# # Put the parameters in a grid
# input_par <- expand.grid(input_theta0, input_theta, input_copula, input_d)
# names(input_par) <- c("theta0", "theta", "copula",  "d")
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- "../Data/Plots/"
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q
df2 <- subset(df1, model != "emos.q")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("decc.q" = mypal[1],
"ecc.q" = mypal[2],
"ecc.s" = mypal[3],
"gca" = mypal[4],
"ssh" = mypal[5],
"Clayton" = mypal[6],
"Frank" = mypal[7],
"Gumbel" = mypal[8])
df2$model <- factor(df2$model, levels = c("decc.q", "ecc.q", "ecc.s", "gca", "ssh", "clayton", "frank", "gumbel"))
model_vec <- c("dECC", "ECC-Q", "ECC-S", "GCA", "SSh", "Clayton", "Frank", "Gumbel")
ylimitFunc <- function(val1, val2) {
return(1.5 * max(abs(val1), abs(val2)))
}
# Plot the scores for copula
plotScores <- function(dfplot, cop, this_score){
dfplotCop <- subset(dfplot, copula == cop)
alpha <- 0.25
ylimits <- apply(cbind(unname(quantile(dfplot$value, c(0.1, 0.9))),c(qnorm(alpha),qnorm(1-alpha))),margin = 1, ylimitFunc)
p1 <- ggplot(dfplotCop, aes(model, value, colour = model)) +
geom_rect(data = subset(dfplotCop, equalThetas == 1), color = "black", size = 2, fill = NA, xmin = -Inf,xmax = Inf, ymin = -10,ymax = 10)
p1 <- p1 + ylim(ylimits[1], ylimits[2])
p1 <- p1 + geom_rect(mapping=aes(xmin=-Inf, xmax=Inf, ymin=qnorm(alpha), ymax=qnorm(1-alpha)), fill = "gray75", color="gray75", alpha=alpha)
p1 <- p1 + geom_boxplot(outlier.shape = NA) + geom_hline(yintercept = 0, linetype = "dashed", color = "gray25")
p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
rm(list=ls())
library(ggplot2)
library(gridExtra)
setwd("C:/Users/20192042/OneDrive - TU Eindhoven/Courses/BEP - BAM/Code/multiv_pp-master/reproducing results and figures")
load("../Data/TestStatistic/testStatistic_Archimedean_1.Rdata")
df <- dfmc; rm(dfmc)
df1 <- subset(df)
input_theta0 <- c(5, 10)
input_theta <- c(5, 10)
input_copula <- c("Frank","Gumbel", "Clayton")
input_d <- 3
# # Put the parameters in a grid
# input_par <- expand.grid(input_theta0, input_theta, input_copula, input_d)
# names(input_par) <- c("theta0", "theta", "copula",  "d")
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- "../Data/Plots/"
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q
df2 <- subset(df1, model != "emos.q")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("decc.q" = mypal[1],
"ecc.q" = mypal[2],
"ecc.s" = mypal[3],
"gca" = mypal[4],
"ssh" = mypal[5],
"Clayton" = mypal[6],
"Frank" = mypal[7],
"Gumbel" = mypal[8])
df2$model <- factor(df2$model, levels = c("decc.q", "ecc.q", "ecc.s", "gca", "ssh", "clayton", "frank", "gumbel"))
model_vec <- c("dECC", "ECC-Q", "ECC-S", "GCA", "SSh", "Clayton", "Frank", "Gumbel")
ylimitFunc <- function(val1, val2) {
return(1.5 * max(abs(val1), abs(val2)))
}
# Plot the scores for copula
plotScores <- function(dfplot, cop, this_score){
dfplotCop <- subset(dfplot, copula == cop)
alpha <- 0.25
quants <- unname(quantile(dfplot$value, c(0.1, 0.9)))
ylimits <- c(1.5 * max(abs(quants[1], qnorm(alpha))), 1.5 * max(abs(quants[2], qnorm(1 - alpha))))
p1 <- ggplot(dfplotCop, aes(model, value, colour = model)) +
geom_rect(data = subset(dfplotCop, equalThetas == 1), color = "black", size = 2, fill = NA, xmin = -Inf,xmax = Inf, ymin = -10,ymax = 10)
p1 <- p1 + ylim(ylimits[1], ylimits[2])
p1 <- p1 + geom_rect(mapping=aes(xmin=-Inf, xmax=Inf, ymin=qnorm(alpha), ymax=qnorm(1-alpha)), fill = "gray75", color="gray75", alpha=alpha)
p1 <- p1 + geom_boxplot(outlier.shape = NA) + geom_hline(yintercept = 0, linetype = "dashed", color = "gray25")
p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
rm(list=ls())
library(ggplot2)
library(gridExtra)
setwd("C:/Users/20192042/OneDrive - TU Eindhoven/Courses/BEP - BAM/Code/multiv_pp-master/reproducing results and figures")
load("../Data/TestStatistic/testStatistic_Archimedean_1.Rdata")
df <- dfmc; rm(dfmc)
df1 <- subset(df)
input_theta0 <- c(5, 10)
input_theta <- c(5, 10)
input_copula <- c("Frank","Gumbel", "Clayton")
input_d <- 3
# # Put the parameters in a grid
# input_par <- expand.grid(input_theta0, input_theta, input_copula, input_d)
# names(input_par) <- c("theta0", "theta", "copula",  "d")
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- "../Data/Plots/"
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q
df2 <- subset(df1, model != "emos.q")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("decc.q" = mypal[1],
"ecc.q" = mypal[2],
"ecc.s" = mypal[3],
"gca" = mypal[4],
"ssh" = mypal[5],
"Clayton" = mypal[6],
"Frank" = mypal[7],
"Gumbel" = mypal[8])
df2$model <- factor(df2$model, levels = c("decc.q", "ecc.q", "ecc.s", "gca", "ssh", "clayton", "frank", "gumbel"))
model_vec <- c("dECC", "ECC-Q", "ECC-S", "GCA", "SSh", "Clayton", "Frank", "Gumbel")
ylimitFunc <- function(val1, val2) {
return(1.5 * max(abs(val1), abs(val2)))
}
# Plot the scores for copula
plotScores <- function(dfplot, cop, this_score){
dfplotCop <- subset(dfplot, copula == cop)
alpha <- 0.25
quants <- unname(quantile(dfplot$value, c(0.1, 0.9)))
ylimits <- c(1.5 * max(abs(quants[1]), abs(qnorm(alpha))), 1.5 * max(abs(quants[2]), abs(qnorm(1 - alpha))))
p1 <- ggplot(dfplotCop, aes(model, value, colour = model)) +
geom_rect(data = subset(dfplotCop, equalThetas == 1), color = "black", size = 2, fill = NA, xmin = -Inf,xmax = Inf, ymin = -10,ymax = 10)
p1 <- p1 + ylim(ylimits[1], ylimits[2])
p1 <- p1 + geom_rect(mapping=aes(xmin=-Inf, xmax=Inf, ymin=qnorm(alpha), ymax=qnorm(1-alpha)), fill = "gray75", color="gray75", alpha=alpha)
p1 <- p1 + geom_boxplot(outlier.shape = NA) + geom_hline(yintercept = 0, linetype = "dashed", color = "gray25")
p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
rm(list=ls())
library(ggplot2)
library(gridExtra)
setwd("C:/Users/20192042/OneDrive - TU Eindhoven/Courses/BEP - BAM/Code/multiv_pp-master/reproducing results and figures")
load("../Data/TestStatistic/testStatistic_Archimedean_1.Rdata")
df <- dfmc; rm(dfmc)
df1 <- subset(df)
input_theta0 <- c(5, 10)
input_theta <- c(5, 10)
input_copula <- c("Frank","Gumbel", "Clayton")
input_d <- 3
# # Put the parameters in a grid
# input_par <- expand.grid(input_theta0, input_theta, input_copula, input_d)
# names(input_par) <- c("theta0", "theta", "copula",  "d")
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- "../Data/Plots/"
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q
df2 <- subset(df1, model != "emos.q")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("decc.q" = mypal[1],
"ecc.q" = mypal[2],
"ecc.s" = mypal[3],
"gca" = mypal[4],
"ssh" = mypal[5],
"Clayton" = mypal[6],
"Frank" = mypal[7],
"Gumbel" = mypal[8])
df2$model <- factor(df2$model, levels = c("decc.q", "ecc.q", "ecc.s", "gca", "ssh", "clayton", "frank", "gumbel"))
model_vec <- c("dECC", "ECC-Q", "ECC-S", "GCA", "SSh", "Clayton", "Frank", "Gumbel")
ylimitFunc <- function(val1, val2) {
return(1.5 * max(abs(val1), abs(val2)))
}
# Plot the scores for copula
plotScores <- function(dfplot, cop, this_score){
dfplotCop <- subset(dfplot, copula == cop)
alpha <- 0.25
quants <- unname(quantile(dfplot$value, c(0.1, 0.9)))
ylimits <- c(1.5 * min(quants[1], qnorm(alpha)), 1.5 * max(quants[2], qnorm(1 - alpha)))
p1 <- ggplot(dfplotCop, aes(model, value, colour = model)) +
geom_rect(data = subset(dfplotCop, equalThetas == 1), color = "black", size = 2, fill = NA, xmin = -Inf,xmax = Inf, ymin = -10,ymax = 10)
p1 <- p1 + ylim(ylimits[1], ylimits[2])
p1 <- p1 + geom_rect(mapping=aes(xmin=-Inf, xmax=Inf, ymin=qnorm(alpha), ymax=qnorm(1-alpha)), fill = "gray75", color="gray75", alpha=alpha)
p1 <- p1 + geom_boxplot(outlier.shape = NA) + geom_hline(yintercept = 0, linetype = "dashed", color = "gray25")
p1 <- p1 + facet_grid(rows = vars(theta), cols = vars(theta0),
labeller = label_bquote(rows = theta==.(theta),
cols = theta[0]==.(theta0)))
scval <- strsplit(this_score, split = "_")[[1]][1]
if(scval == "es"){
title <- paste("Energy Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
if(scval == "vs1"){
title <- paste("Variogram Score for",cop,"copula")
p1 <- p1 + ggtitle(title)
}
p1 <- p1 + theme_bw() + theme(legend.position = "bottom")
p1 <- p1 + xlab("Model") + ylab("DM test statistic")
p1 <- p1 + scale_color_manual(values = mypal_use, name = "Model", label = model_vec)
p1 <- p1 + scale_x_discrete(label = model_vec)
return(p1)
}
## ES
this_score <- "es_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_ES.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_ES.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
## VS
this_score <- "vs1_list"
dfplot <- subset(df2, score == this_score)
dfplot$equalThetas <- (dfplot$theta0 == dfplot$theta)
# Get the plots
p1saveFrank <- plotScores(dfplot, "Frank", this_score)
p1saveClayton <- plotScores(dfplot, "Clayton", this_score)
p1saveGumbel <- plotScores(dfplot, "Gumbel", this_score)
### Join the plots
library(gridExtra)
pdf(paste0(plot_folder, "Arch_VS.pdf"), width = 15, height = 24, pointsize = 11)
png(paste0(plot_folder, "Arch_VS.png"), width = 1000, height = 2000, pointsize = 11)
grid.arrange(p1saveClayton,p1saveFrank,p1saveGumbel, ncol = 1)
dev.off()
