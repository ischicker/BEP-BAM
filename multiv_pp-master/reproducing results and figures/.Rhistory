load("C:/Users/mgjfl/OneDrive - TU Eindhoven/University/Courses/Bachelor BAM-BAP/BEP - BAM/Code/Data/INPUT-DATA_temp_2013071000-2016033000.Rdata")
View(input)
load("C:/Users/mgjfl/OneDrive - TU Eindhoven/University/Courses/Bachelor BAM-BAP/BEP - BAM/Code/multiv_pp-master/simulation code/.Rhistory")
load("~/.Rhistory")
help(pnorm)
help(pnorm)
help(mvdc)
library(copula)
help(mvdc)
rMvdc
help(pnorm)
source("C:/Users/mgjfl/OneDrive - TU Eindhoven/University/Courses/Bachelor BAM-BAP/BEP - BAM/Code/multiv_pp-master/simulation code/sourceArchimedean/mvpp_arch.R")
help("fitCopula")
fitCopula
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(x)
x
x[1]
source("~/.active-rstudio-document")
specific_row
dim(specific_row)
length(specific_row)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
specific_row
source("~/.active-rstudio-document")
length(specific_row)
source("~/.active-rstudio-document")
help(rank)
help(fitCOpula)
source("C:/Users/mgjfl/OneDrive - TU Eindhoven/University/Courses/Bachelor BAM-BAP/BEP - BAM/Code/multiv_pp-master/simulation code/comparison_GCA_methods.R")
View(cop)
cor(X_copula)
groupNR <- 5
# for (groupNR in 1:5) {
fix_training_days <- FALSE
training_days_method <- "random_past"
fName <- paste0("Res_group_", groupNR)
if (fix_training_days) {
fName <- paste0(training_days_method, fName)
}
load(paste0("../Data/Rdata_LAEF/", fName, ".Rdata")) # loads data in "res" variable
library(ggplot2)
library(gridExtra)
library("here")
here2 <- function() {
args <- commandArgs(trailingOnly = FALSE)
if ("RStudio" %in% args) {
dirname(rstudioapi::getActiveDocumentContext()$path)
} else {
file_arg <- "--file="
filepath <- sub(file_arg, "", grep(file_arg, args, value = TRUE))
dirname(filepath)
}
}
setwd(here2())
groupNR <- 5
# for (groupNR in 1:5) {
fix_training_days <- FALSE
training_days_method <- "random_past"
fName <- paste0("Res_group_", groupNR)
if (fix_training_days) {
fName <- paste0(training_days_method, fName)
}
load(paste0("../Data/Rdata_LAEF/", fName, ".Rdata")) # loads data in "res" variable
View(res)
savedir <- paste0("../Data/TestStatistic/")
savename <- paste0("TestStatistic_data_group",groupNR, ".Rdata")
if (fix_training_days) {
savename <- paste0(training_days_method, savename)
}
load(paste0(savedir, savename))
df <- dfmc; rm(dfmc)
df1 <- subset(df)
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- paste0("../Data/Plots/Group ",groupNR,"/")
if (fix_training_days) {
plot_folder <- paste0(plot_folder, training_days_method, "/")
}
dir.create(file.path(plot_folder), showWarnings = FALSE)
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
# also drop EMOS.Q, GOF, ECC methods and GCA
df2 <- subset(df1, model != "emos.q" & model != "GOF" & model != "decc.q" & model != "ecc.q" & model != "ecc.s" & model != "ssh")
mypal <- colorspace::rainbow_hcl(8)
mypal_use <- c("ssh.h" = mypal[1],
"ssh.i" = mypal[2],
"gca" = mypal[3],
"gca.cop" = mypal[4],
"Clayton" = mypal[5],
"Frank" = mypal[6],
"Gumbel" = mypal[7],
"Surv_Gumbel" = mypal[8])
levels <- c("ssh.h", "ssh.i", "gca", "gca.cop", "Clayton","Frank","Gumbel","Surv_Gumbel")
model_vec <- c("SSh-H", "SSh-I14", "GCA", "CopGCA", "Clayton", "Frank", "Gumbel", "Surv_Gumbel")
model2display_names <- data.frame(model_names=levels , display_names=model_vec)
df2$model <- factor(df2$model, levels = levels)
View(df2)
# rm(list=ls())
library(ggplot2)
library(gridExtra)
library("here")
setwd(here2())
groupNR <- 5
# for (groupNR in 1:5) {
fix_training_days <- FALSE
training_days_method <- "random_past"
fName <- paste0("Res_group_", groupNR)
if (fix_training_days) {
fName <- paste0(training_days_method, fName)
}
load(paste0("../Data/Rdata_LAEF/", fName, ".Rdata")) # loads data in "res" variable
savedir <- paste0("../Data/TestStatistic/")
savename <- paste0("TestStatistic_data_group",groupNR, ".Rdata")
if (fix_training_days) {
savename <- paste0(training_days_method, savename)
}
load(paste0(savedir, savename))
df <- dfmc; rm(dfmc)
df1 <- subset(df)
df1$value <- (-1)*df1$value
df0 <- df1
input_scores <- unique(df1$score)
plot_folder <- paste0("../Data/Plots/Group ",groupNR,"/")
if (fix_training_days) {
plot_folder <- paste0(plot_folder, training_days_method, "/")
}
dir.create(file.path(plot_folder), showWarnings = FALSE)
# drop model == "ens"
df1_save <- df1
df1 <- subset(df1_save, model != "ens")
View(df1)
